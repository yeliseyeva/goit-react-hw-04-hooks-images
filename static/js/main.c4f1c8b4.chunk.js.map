{"version":3,"sources":["Components/Searchbar/Searchbar.js","Components/Modal/Modal.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","Components/Loader/Loader.js","Components/Button/Button.js","services/apiService.js","App.js","index.js"],"names":["Searchbar","handleSubmit","useState","query","setQuery","className","onSubmit","e","preventDefault","toast","error","type","name","value","onChange","currentTarget","autoComplete","autoFocus","placeholder","modalRoot","document","querySelector","Modal","largeImageURL","alt","toggleModal","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","onClick","target","src","ImageGalleryItem","image","showModal","setShowModal","webformatURL","tags","ImageGallery","images","map","id","Loader","color","height","width","timeout","Button","loadMore","axios","defaults","baseURL","api","getPictures","page","get","then","res","data","hits","App","setImages","setPage","loading","setLoading","setError","scrollTo","top","documentElement","scrollHeight","behavior","catch","finally","length","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c4f1c8b4.chunk.js","sourcesContent":["import {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {toast } from 'react-toastify';\r\n\r\nfunction Searchbar ({handleSubmit}) {\r\n\r\n    const [query, setQuery] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        setQuery(e.currentTarget.value);\r\n    };\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (query === \"\") {\r\n            toast.error(`Введите название картинки`)\r\n        }\r\n    \r\n        handleSubmit(query);\r\n\r\n        setQuery('');\r\n    };\r\n    \r\n\r\n    return (\r\n        <header className=\"Searchbar\">\r\n            <form \r\n            className=\"SearchForm\"\r\n            onSubmit={submit}>\r\n                <button type=\"submit\" className=\"SearchForm-button\">\r\n                <span className=\"SearchForm-button-label\">Search</span>\r\n                </button>\r\n\r\n                <input\r\n                name=\"query\"\r\n                value={query}\r\n                onChange={handleChange}\r\n                className=\"SearchForm-input\"\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                autoFocus\r\n                placeholder=\"Search images and photos\"\r\n                />\r\n            </form>\r\n        </header>\r\n    )\r\n}\r\n\r\nSearchbar.propTypes = {\r\n    handleSubmit: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Searchbar;","import {useEffect} from \"react\";\r\nimport {createPortal} from \"react-dom\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nfunction Modal ({largeImageURL, alt, toggleModal}) {\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        } \r\n    })\r\n\r\n    const handleBackdropClick = (e) => {\r\n        if (e.currentTarget === e.target) {\r\n            toggleModal()\r\n        }\r\n    }\r\n\r\n    const handleKeyDown = (e) => {\r\n        if (e.code === 'Escape') {\r\n            toggleModal()\r\n        }\r\n    }\r\n\r\n    return createPortal(\r\n        <div className=\"Overlay\"\r\n            onClick={handleBackdropClick}>\r\n            <div className=\"Modal\">\r\n                <img src={largeImageURL} alt={alt}/>\r\n            </div>\r\n        </div>,\r\n        modalRoot,\r\n    )\r\n}\r\n\r\nModal.propTypes = {\r\n    toggleModal: PropTypes.func.isRequired,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Modal;","import {useState} from \"react\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ImageGalleryItem ({image}) {\r\n\r\n    const [showModal, setShowModal] = useState(false)\r\n\r\n    const toggleModal = () => {\r\n        setShowModal(!showModal)\r\n    };\r\n    \r\n\r\n    const onClickItem = () => {\r\n        toggleModal();\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <li className=\"ImageGalleryItem\" \r\n            onClick={onClickItem}>\r\n            <img src={image.webformatURL} alt={image.tags} className=\"ImageGalleryItem-image\" />\r\n        </li>\r\n\r\n        {showModal && (<Modal toggleModal={toggleModal} largeImageURL={image.largeImageURL} alt={image.tags}/>)}\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n    image: PropTypes.object.isRequired\r\n}\r\n\r\n\r\nexport default ImageGalleryItem;","import React from \"react\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ImageGallery ({images}) {\r\n    \r\n    return (\r\n        <ul className=\"ImageGallery\">\r\n            {images.map(image => \r\n                <ImageGalleryItem image={image} key={image.id}/>\r\n            )}\r\n        </ul>\r\n    )\r\n}\r\n\r\nImageGallery.propTypes = {\r\n    images: PropTypes.array.isRequired\r\n}\r\n\r\nexport default ImageGallery;","import NewLoader from \"react-loader-spinner\";\r\n\r\nfunction Loader () {\r\n    return (\r\n        <div className=\"spinner\">\r\n            <NewLoader\r\n            type=\"Puff\"\r\n            color=\"#00BFFF\"\r\n            height={100}\r\n            width={100}\r\n            timeout={3000}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader","import React from \"react\";\r\n\r\nfunction Button ({loadMore}) {\r\n    return (\r\n        <button className=\"Button\"\r\n                onClick={loadMore}>Load More</button>\r\n    )\r\n}\r\n\r\nexport default Button;","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL= 'https://pixabay.com/api'\r\nconst API_KEY = '23129737-24f03c8dbe97b8724820f585e';\r\n\r\n\r\nfunction getPictures (query, page) {\r\n    return axios.get(`/?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`)\r\n    .then(res => res.data.hits)\r\n}\r\n\r\nconst api = {\r\n    getPictures,\r\n};\r\n\r\nexport default api;","import { useState, useEffect} from \"react\";\nimport Searchbar from \"./Components/Searchbar/Searchbar\";\nimport ImageGallery from \"./Components/ImageGallery/ImageGallery\";\nimport Loader from \"./Components/Loader/Loader\";\nimport Button from \"./Components/Button/Button\";\nimport api from \"./services/apiService\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App () {\n\n  const [query, setQuery] = useState('');\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (query === \"\") {\n      return;\n    }\n\n    getPictures();\n\n  }, [query]);\n\n  useEffect(() => {\n    if (page !== 2) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }, [page]);\n\n  const handleSubmit = (query) => {\n    setQuery(query);\n    setPage(1);\n    setImages([]);\n    setError(null)\n  };\n\n  const getPictures = () => {\n\n    setLoading(true)\n\n    api\n    .getPictures(query, page)\n    .then(res => {\n      setImages([...images, ...res]);\n      setPage(page + 1)\n    })\n    .catch( () => setError(true))\n    .finally(() => setLoading(false) )\n\n  }\n\n  return (\n    <div className=\"App\">\n\n      <Searchbar handleSubmit={handleSubmit}/>\n\n      {error && toast.error(`Не нашли картинку ${query}:(`)}\n\n      <ImageGallery images={images}/>\n\n      {images.length > 0 && <Button loadMore={getPictures}/>}\n\n      {loading && <Loader />}\n\n      <ToastContainer autoClose={3000}/>\n\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}